import os
import csv
import logging
from datetime import datetime
from config.settings import config

logger = logging.getLogger("logs")

def log_trade_to_csv(token_address: str, gain: float, signature: str, wallet_pubkey: str):
    """
    Enregistre une transaction dans un fichier CSV si activ√© dans la config.
    :param token_address: mint du token concern√©
    :param gain: montant de gain (en SOL, peut √™tre n√©gatif)
    :param signature: tx hash
    :param wallet_pubkey: wallet utilis√© pour l'action
    """
    if not config.csv_output_enabled:
        logger.debug("‚úèÔ∏è CSV logging d√©sactiv√©.")
        return

    try:
        csv_path = config.csv_output_path or "logs/transactions.csv"
        os.makedirs(os.path.dirname(csv_path), exist_ok=True)

        file_exists = os.path.isfile(csv_path)
        with open(csv_path, mode='a', newline='') as file:
            writer = csv.writer(file)
            if not file_exists:
                writer.writerow(["timestamp", "token", "gain_sol", "signature", "wallet_pubkey"])
            writer.writerow([
                datetime.utcnow().isoformat(),
                token_address,
                round(gain, 6),
                signature,
                wallet_pubkey
            ])
        logger.info(f"üìù Trade logg√© dans {csv_path}")
    except Exception as e:
        logger.exception(f"‚ùå Erreur lors de l‚Äô√©criture du fichier CSV : {e}")
